// Generated by CoffeeScript 1.5.0
(function() {
  var Modificador, Nota, Orden;

  Nota = (function() {

    function Nota(nombre) {
      this.nombre = nombre;
      this.id = 0;
      this.total = 0;
      this.div = null;
      this.ordenes = new Array();
    }

    Nota.prototype.fromJSON = function(nota_json) {
      var orden, orden_json, _i, _len, _ref;
      this.id = nota_json.id;
      this.total = nota_json.total;
      this.nombre = nota_json.nombre;
      this.total = 0;
      this.toHtml();
      _ref = nota_json.ordenes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        orden_json = _ref[_i];
        orden = new Orden();
        orden = orden.fromJSON(orden_json);
        this.ordenes.push(orden);
        this.div.children('.ordenes').append(orden.toHtml());
      }
      this.calculaTotal();
      return this.div;
    };

    Nota.prototype.calculaTotal = function() {
      var orden, suma, _i, _len, _ref;
      suma = 0;
      _ref = this.ordenes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        orden = _ref[_i];
        suma += orden.precio_total;
      }
      this.total = suma;
      return this.div.children('.total').children('.resultado').html(this.total);
    };

    Nota.prototype.guardar = function() {
      return jQuery.ajax({
        type: 'POST',
        url: '/notas',
        data: {
          'nota': JSON.stringify(this)
        },
        success: function(data) {},
        error: function() {
          return alert('Error al guardar nota');
        }
      });
    };

    Nota.prototype.toHtml = function() {
      this.div = $('<div class="nota">').data('nota', this);
      this.div.html('<span class="nombre">' + this.nombre + '</span>'.concat('<div class="ordenes"></div>').concat('<div class="total">Total: <span class="resultado">').concat(this.total).concat('</span>').concat('<a href="#" class="cerrar">Cerrar<a href="#" class="imprimir">').concat('Imprimir'));
      return this.div;
    };

    Nota.prototype.agregaOrden = function(orden) {
      this.ordenes.push(orden);
      this.div.children('.ordenes').append(orden.toHtml());
      return this.calculaTotal();
    };

    Nota.prototype.borrarOrden = function(orden) {
      var orden_nota, _i, _len, _ref;
      _ref = this.ordenes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        orden_nota = _ref[_i];
        if (orden.id === orden_nota.id) {
          this.ordenes.splice(_i, 1);
          return this.calculaTotal();
        }
      }
    };

    Nota.prototype.imprime = function() {
      var d, doc, orden, _i, _len, _ref;
      doc = "Cant. ".concat(Array(9).join(" ")).concat("Producto").concat(Array(9).join(" ")).concat("P.U.  P.T.\n");
      d = new Date();
      _ref = this.ordenes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        orden = _ref[_i];
        doc = doc.concat(orden.cantidad).concat(Array(4).join(" ")).concat(orden.producto_nombre.substring(0, 26)).concat(Array(26 - (orden.producto_nombre.substring(0, 26).length)).join(" ")).concat(orden.precio_unitario).concat("   ").concat(orden.precio_total).concat("\n");
      }
      doc = doc.concat(Array(41).join("-")).concat("\n").concat("Total:").concat(Array(30).join(" ")).concat(this.total);
      return PielDeCafe.imprimeNota(doc, $("#usuario").text(), "" + (d.getDate()) + "/" + (d.getMonth() + 1) + "/" + (d.getFullYear()), d.toTimeString().substring(0, 5));
    };

    Nota.prototype.update = function() {
      return jQuery.ajax({
        type: 'PUT',
        url: "/notas/" + this.id,
        data: {
          'total': this.total
        },
        success: function(data) {},
        error: function() {
          return alert('Error: No se guardo la nota');
        }
      });
    };

    return Nota;

  })();

  jQuery(document).ready(function() {
    var dialogo, nuevaNota;
    jQuery.ajax({
      type: 'GET',
      url: '/notas',
      data: {
        'abierta': true
      },
      dataType: 'json',
      success: function(notas) {
        $(notas).each(function(i, nota_json) {
          var nota;
          nota = new Nota(nota_json.nombre);
          return $("#notas").append(nota.fromJSON(nota_json));
        });
        return $("#notas .nota:first").addClass("active");
      }
    });
    $("a[data-id]").click(function() {
      var nota, nota_html, orden;
      nota_html = $(".nota.active");
      if (nota_html.length === 0) {
        nota_html = nuevaNota();
      }
      nota = nota_html.data('nota');
      orden = new Orden($(this).data('id'), $(this).data('nombre'), parseFloat($(this).data('precio')));
      return jQuery.ajax({
        type: 'GET',
        url: '/productos/'.concat($(this).data('id')).concat('/modificadores'),
        dataType: 'json',
        success: function(data) {
          if (data !== null && data.length > 0) {
            return dialogo(nota, data, orden);
          } else {
            nota.agregaOrden(orden);
            orden.guardar(nota.id);
            return nota.update();
          }
        }
      });
    });
    dialogo = function(nota_activa, data, orden) {
      var categoria, contenido, cuerpo, modificador, modificador_producto, modificadores, nombre_categoria, tipo, _i, _j, _len, _len1, _ref;
      cuerpo = $("#modificadores .modal-body").data('orden', orden).empty().html('');
      modificadores = {};
      for (_i = 0, _len = data.length; _i < _len; _i++) {
        modificador_producto = data[_i];
        if (modificadores[modificador_producto.modificador.tipo.nombre]) {
          modificadores[modificador_producto.modificador.tipo.nombre]['modificador'].push({
            'id': modificador_producto.id,
            'nombre': modificador_producto.modificador.nombre,
            'costo': modificador_producto.costo,
            'default': modificador_producto["default"],
            'excluyente': modificador_producto.modificador.tipo.excluyente
          });
        } else {
          modificadores[modificador_producto.modificador.tipo.nombre] = {
            'modificador': [
              {
                'id': modificador_producto.id,
                'nombre': modificador_producto.modificador.nombre,
                'costo': modificador_producto.costo,
                'default': modificador_producto["default"],
                'excluyente': modificador_producto.modificador.tipo.excluyente
              }
            ]
          };
        }
      }
      contenido = "";
      for (nombre_categoria in modificadores) {
        categoria = modificadores[nombre_categoria];
        contenido = contenido.concat("<h4>" + nombre_categoria + "</h4>");
        _ref = categoria.modificador;
        for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
          modificador = _ref[_j];
          if (modificador.excluyente) {
            tipo = "radio";
          } else {
            tipo = "checkbox";
          }
          contenido = contenido.concat("<label class='" + tipo + "'><input type='" + tipo + "'").concat(" name='" + nombre_categoria + "' data-id='" + modificador.id + "' data-costo='" + modificador.costo + "'").concat(" data-nombre='" + modificador.nombre + "'/> " + modificador.nombre + " </label>");
        }
      }
      cuerpo.append(contenido);
      return $("#modificadores").modal('show');
    };
    $(document).on('click', '#modificadores .modal-footer a', function() {
      var nota, orden;
      orden = $("#modificadores .modal-body").data('orden');
      $("#modificadores .modal-body :checked").each(function() {
        var modificador;
        modificador = new Modificador($(this).data('id'), $(this).data('nombre'), parseFloat($(this).data('costo')));
        return orden.agregaModificador(modificador);
      });
      $("#modificadores").modal('hide');
      nota = $(".nota.active").data('nota');
      orden.guardar(nota.id);
      nota.agregaOrden(orden);
      return nota.update();
    });
    $("#nota_nueva").click(function() {
      return nuevaNota();
    });
    nuevaNota = function() {
      var data, nota, nota_nueva;
      nota_nueva = jQuery.ajax({
        type: 'GET',
        url: '/notas/new',
        async: false,
        success: function(data) {
          return data;
        },
        error: function() {
          return alert('Error: Fall√≥ crear nota');
        }
      });
      data = JSON.parse(nota_nueva.responseText);
      nota = new Nota();
      nota.id = data.id;
      nota.nombre = "Nota_" + nota.id;
      $("#notas").append(nota.toHtml());
      $(".nota").each(function() {
        return $(this).removeClass("active");
      });
      nota.div.addClass("active");
      return nota.div;
    };
    $(document).on('click', '.nota', function() {
      $(".nota").each(function() {
        return $(this).removeClass("active");
      });
      return $(this).addClass("active");
    });
    $(document).on('change', '.cantidad', function() {
      var nota, orden;
      orden = $(this).parent('.orden').data('orden');
      nota = $(".nota.active").data('nota');
      orden.setCantidad($(this).val());
      orden.update(nota.id);
      nota.calculaTotal();
      return nota.update();
    });
    $(document).on('click', '.borrar', function() {
      var nota, orden;
      orden = $(this).parent('.orden').data('orden');
      nota = orden.div.parents('.nota').data('nota');
      return jQuery.ajax({
        url: "/notas/" + nota.id + "/ordenes/" + orden.id,
        type: "DELETE",
        success: function(data) {}
      }, nota.borrarOrden(orden), orden.div.empty().remove());
    });
    $(document).on('click', '.cerrar', function() {
      var nota;
      nota = $(this).parents('.nota').data('nota');
      return jQuery.ajax({
        url: "/notas/" + nota.id,
        type: 'PUT',
        data: {
          'abierta': false
        },
        success: function(data) {
          return nota.div.empty().remove();
        }
      });
    });
    return $(document).on('click', '.imprimir', function() {
      var nota;
      nota = $(this).parents('.nota').data('nota');
      return nota.imprime();
    });
  });

  Modificador = (function() {

    function Modificador(id, nombre, costo) {
      this.id = id;
      this.nombre = nombre;
      this.costo = costo;
    }

    return Modificador;

  })();

  Orden = (function() {

    function Orden(producto_id, nombre, precio) {
      this.id = 0;
      this.producto_nombre = nombre;
      this.producto_nombre_original = nombre;
      this.precio_producto = precio;
      this.precio_unitario = precio;
      this.precio_total = precio;
      this.producto_id = producto_id;
      this.cantidad = 1;
      this.llevar = false;
      this.modificadores_producto = new Array();
      this.div = null;
    }

    Orden.prototype.fromJSON = function(orden_json) {
      var modificador, modificador_producto, orden_modificador_producto, _i, _len, _ref;
      this.id = orden_json.id;
      this.producto_id = orden_json.producto.id;
      this.producto_nombre_original = orden_json.producto.nombre;
      this.producto_nombre = this.producto_nombre_original;
      this.precio_producto = orden_json.producto.precio;
      this.precio_unitario = this.precio_producto;
      this.llevar = orden_json.llevar;
      _ref = orden_json.modificadores_producto;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        orden_modificador_producto = _ref[_i];
        modificador_producto = orden_modificador_producto.modificador_producto;
        modificador = new Modificador(modificador_producto.id, modificador_producto.modificador.nombre, modificador_producto.costo);
        this.agregaModificador(modificador);
      }
      this.toHtml();
      this.setCantidad(orden_json.cantidad);
      return this;
    };

    Orden.prototype.toJSON = function() {
      return {
        id: this.id,
        producto_id: this.producto_id,
        cantidad: this.cantidad,
        llevar: this.llevar,
        modificadores_producto: JSON.stringify(this.modificador_producto)
      };
    };

    Orden.prototype.setCantidad = function(cantidad) {
      this.cantidad = parseInt(cantidad);
      this.precio_total = this.cantidad * this.precio_unitario;
      return this.div.children('.precio_total').html(this.precio_total);
    };

    Orden.prototype.agregaModificador = function(modificador) {
      var _i, _len, _ref;
      this.modificadores_producto.push(modificador);
      this.precio_unitario = this.precio_producto;
      this.producto_nombre = this.producto_nombre_original;
      _ref = this.modificadores_producto;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        modificador = _ref[_i];
        this.precio_unitario += parseInt(modificador.costo);
        this.producto_nombre += " " + modificador.nombre;
      }
      return this.precio_total = this.precio_unitario;
    };

    Orden.prototype.guardar = function(nota_id) {
      var data;
      data = jQuery.ajax({
        type: 'POST',
        url: '/notas/'.concat(nota_id).concat('/ordenes/'),
        data: {
          'orden': JSON.stringify(this)
        },
        async: false,
        success: function(data) {
          return data;
        },
        error: function() {
          return alert('Error: No se guardo la orden');
        }
      });
      return this.id = data.responseText;
    };

    Orden.prototype.toHtml = function() {
      this.div = $('<div class="orden">').data('orden', this);
      this.div.append('<input type="checkbox" class="input checkbox llevar" name="llevar"/>');
      this.div.append($('<select class="cantidad">').append([1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function(i) {
        return "<option>" + i + "</option>";
      }).join("")).val(this.cantidad));
      this.div.append("<span class='producto_nombre'>" + this.producto_nombre + "</span><span class='precio_unitario'>" + this.precio_unitario + "</span><span class='precio_total'>" + this.precio_total + "</span>");
      this.div.append($('<a href="#" class="borrar">').html("Borrar"));
      return this.div;
    };

    Orden.prototype.update = function(nota_id) {
      return jQuery.ajax({
        type: 'PUT',
        url: "/notas/" + nota_id + "/ordenes/" + this.id,
        data: {
          'cantidad': this.cantidad
        },
        error: function() {
          return alert('Error: No se guardo la nota');
        }
      });
    };

    return Orden;

  })();

}).call(this);
